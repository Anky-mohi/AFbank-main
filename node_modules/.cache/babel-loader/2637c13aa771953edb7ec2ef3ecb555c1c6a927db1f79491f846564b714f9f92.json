{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\Downloads\\\\AFbank-main\\\\AFbank-main\\\\src\\\\components\\\\SellerDashboard\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  // Sample data for messages\n  const initialMessages = [{\n    id: 1,\n    sender: 'Alice',\n    preview: 'Hey, I have a question about your listing...',\n    content: 'Hey, I have a question about your listing. Could you please provide more details about the pricing and profit margins?',\n    date: '2024-09-20'\n  }, {\n    id: 2,\n    sender: 'Bob',\n    preview: 'Can we arrange a call to discuss the investment?',\n    content: 'Can we arrange a call to discuss the investment opportunity? I would like to learn more before making a decision.',\n    date: '2024-09-19'\n  }];\n  const [messages, setMessages] = useState(initialMessages);\n  const [selectedMessage, setSelectedMessage] = useState(null); // To store the selected message for detailed view\n\n  // Function to handle message selection\n  const handleSelectMessage = message => {\n    setSelectedMessage(message);\n  };\n\n  // Function to handle reply\n  const handleSendReply = e => {\n    e.preventDefault();\n    alert('Reply sent!');\n    // Logic to send the reply can be added here (e.g., API call)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-preview\",\n          onClick: () => handleSelectMessage(message),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: message.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-date\",\n            children: message.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), selectedMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Conversation with \", selectedMessage.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMessage.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"reply-form\",\n          onSubmit: handleSendReply,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Type your reply here...\",\n            rows: \"4\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-message-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a message to view the conversation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"XuCT9s6lsq13Vos/kAxC0kkQOzo=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Messages","_s","initialMessages","id","sender","preview","content","date","messages","setMessages","selectedMessage","setSelectedMessage","handleSelectMessage","message","handleSendReply","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSubmit","placeholder","rows","required","type","_c","$RefreshReg$"],"sources":["C:/Users/mohit/Downloads/AFbank-main/AFbank-main/src/components/SellerDashboard/Messages.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Messages.css';\n\nconst Messages = () => {\n  // Sample data for messages\n  const initialMessages = [\n    {\n      id: 1,\n      sender: 'Alice',\n      preview: 'Hey, I have a question about your listing...',\n      content: 'Hey, I have a question about your listing. Could you please provide more details about the pricing and profit margins?',\n      date: '2024-09-20',\n    },\n    {\n      id: 2,\n      sender: 'Bob',\n      preview: 'Can we arrange a call to discuss the investment?',\n      content: 'Can we arrange a call to discuss the investment opportunity? I would like to learn more before making a decision.',\n      date: '2024-09-19',\n    },\n  ];\n\n  const [messages, setMessages] = useState(initialMessages);\n  const [selectedMessage, setSelectedMessage] = useState(null); // To store the selected message for detailed view\n\n  // Function to handle message selection\n  const handleSelectMessage = (message) => {\n    setSelectedMessage(message);\n  };\n\n  // Function to handle reply\n  const handleSendReply = (e) => {\n    e.preventDefault();\n    alert('Reply sent!');\n    // Logic to send the reply can be added here (e.g., API call)\n  };\n\n  return (\n    <div className=\"messages-section\">\n      <h3>Messages</h3>\n      <div className=\"messages-container\">\n        {/* Message List */}\n        <div className=\"message-list\">\n          {messages.map((message) => (\n            <div\n              key={message.id}\n              className=\"message-preview\"\n              onClick={() => handleSelectMessage(message)}\n            >\n              <p><strong>{message.sender}</strong></p>\n              <p>{message.preview}</p>\n              <p className=\"message-date\">{message.date}</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Message Detail View */}\n        {selectedMessage ? (\n          <div className=\"message-detail\">\n            <h4>Conversation with {selectedMessage.sender}</h4>\n            <p>{selectedMessage.content}</p>\n\n            {/* Reply Form */}\n            <form className=\"reply-form\" onSubmit={handleSendReply}>\n              <textarea\n                placeholder=\"Type your reply here...\"\n                rows=\"4\"\n                required\n              ></textarea>\n              <button type=\"submit\">Send Reply</button>\n            </form>\n          </div>\n        ) : (\n          <div className=\"no-message-selected\">\n            <p>Select a message to view the conversation.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAMC,eAAe,GAAG,CACtB;IACEC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE,8CAA8C;IACvDC,OAAO,EAAE,wHAAwH;IACjIC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,kDAAkD;IAC3DC,OAAO,EAAE,mHAAmH;IAC5HC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACK,eAAe,CAAC;EACzD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9D;EACA,MAAMe,mBAAmB,GAAIC,OAAO,IAAK;IACvCF,kBAAkB,CAACE,OAAO,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAC,aAAa,CAAC;IACpB;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAEjCpB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BX,QAAQ,CAACgB,GAAG,CAAEX,OAAO,iBACpBd,OAAA;UAEEmB,SAAS,EAAC,iBAAiB;UAC3BO,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAACC,OAAO,CAAE;UAAAM,QAAA,gBAE5CpB,OAAA;YAAAoB,QAAA,eAAGpB,OAAA;cAAAoB,QAAA,EAASN,OAAO,CAACT;YAAM;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACxCxB,OAAA;YAAAoB,QAAA,EAAIN,OAAO,CAACR;UAAO;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBxB,OAAA;YAAGmB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEN,OAAO,CAACN;UAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GANzCV,OAAO,CAACV,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLb,eAAe,gBACdX,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BpB,OAAA;UAAAoB,QAAA,GAAI,oBAAkB,EAACT,eAAe,CAACN,MAAM;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnDxB,OAAA;UAAAoB,QAAA,EAAIT,eAAe,CAACJ;QAAO;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGhCxB,OAAA;UAAMmB,SAAS,EAAC,YAAY;UAACQ,QAAQ,EAAEZ,eAAgB;UAAAK,QAAA,gBACrDpB,OAAA;YACE4B,WAAW,EAAC,yBAAyB;YACrCC,IAAI,EAAC,GAAG;YACRC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACZxB,OAAA;YAAQ+B,IAAI,EAAC,QAAQ;YAAAX,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,gBAENxB,OAAA;QAAKmB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCpB,OAAA;UAAAoB,QAAA,EAAG;QAA0C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7EID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA+Ed,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}